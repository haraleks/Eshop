# Generated by Django 3.1.4 on 2020-12-19 16:39

from django.db import migrations, models
import django.db.models.deletion
import users.constants


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0002_customer'),
    ]

    operations = [
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('type', models.CharField(choices=[('char', 'Char max length 300'), ('int', 'Integer'), ('float', 'Float'), ('bool', 'Bool'), ('txt', 'Text'), ('date', 'Date'), ('datetime', 'Date & time')], default=users.constants.TypeValue['CHAR'], max_length=8)),
            ],
            options={
                'verbose_name': 'Attribute',
                'verbose_name_plural': 'Attribute',
                'permissions': [],
            },
        ),
        migrations.CreateModel(
            name='Basket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('status', models.CharField(blank=True, choices=[('created', 'Created'), ('paid', 'Paid'), ('canceled', 'Canceled')], max_length=9)),
                ('customer', models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, related_name='basket', to='users.customer')),
            ],
            options={
                'verbose_name': 'Basket',
                'verbose_name_plural': 'Baskets',
                'permissions': [],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'permissions': [],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('price', models.IntegerField(default=0, verbose_name='Price')),
                ('sku', models.CharField(blank=True, default='', max_length=50, verbose_name='SKU')),
                ('description', models.TextField(blank=True, verbose_name='Description product')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'permissions': [],
            },
        ),
        migrations.CreateModel(
            name='PromoCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('code', models.CharField(blank=True, default='', max_length=50, verbose_name='Code')),
                ('quantity', models.PositiveIntegerField(default=0, verbose_name='Quantity of cods')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active code')),
            ],
            options={
                'verbose_name': 'Promo Code',
                'verbose_name_plural': 'Promo Cods',
                'permissions': [],
            },
        ),
        migrations.CreateModel(
            name='Value',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value_char', models.CharField(default='', max_length=300)),
                ('value_int', models.IntegerField(blank=True, null=True)),
                ('value_float', models.FloatField(blank=True, null=True)),
                ('value_bool', models.BooleanField(null=True)),
                ('value_txt', models.TextField(blank=True)),
                ('value_date', models.DateField(blank=True)),
                ('value_datetime', models.DateTimeField(blank=True)),
                ('attribute', models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, related_name='value', to='shop.attribute')),
                ('product', models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, related_name='value', to='shop.product')),
            ],
            options={
                'verbose_name': 'Value',
                'verbose_name_plural': 'Value',
                'permissions': [],
            },
        ),
        migrations.CreateModel(
            name='Subcategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('category', models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, related_name='subcategory', to='shop.category')),
            ],
            options={
                'verbose_name': 'Subcategory',
                'verbose_name_plural': 'Subcategories',
                'permissions': [],
            },
        ),
        migrations.CreateModel(
            name='ProductsCompare',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('customer', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products_compare', to='users.customer')),
                ('products', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products_compare', to='shop.product')),
            ],
            options={
                'verbose_name': 'Products for compare',
                'verbose_name_plural': 'Products for compare',
                'permissions': [],
            },
        ),
        migrations.CreateModel(
            name='ProductItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0, verbose_name='Quantity of products')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('product', models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, related_name='product_items', to='shop.product')),
            ],
            options={
                'verbose_name': 'Product Items',
                'verbose_name_plural': 'Products Items',
                'permissions': [],
            },
        ),
        migrations.AddField(
            model_name='product',
            name='subcategory',
            field=models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, related_name='product', to='shop.subcategory'),
        ),
        migrations.CreateModel(
            name='PositionProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0, verbose_name='Quantity of products')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('basket', models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, related_name='position_product', to='shop.basket')),
                ('product_items', models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, related_name='position_product', to='shop.productitems')),
            ],
            options={
                'verbose_name': 'Position product',
                'verbose_name_plural': 'Position products',
                'permissions': [],
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True)),
                ('customer', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='feedback', to='users.customer')),
                ('product', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='feedback', to='shop.product')),
            ],
            options={
                'verbose_name': 'Feedback',
                'verbose_name_plural': 'Feedbacks',
                'permissions': [],
            },
        ),
        migrations.CreateModel(
            name='DesiredProducts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer', models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, related_name='desired_products', to='users.customer')),
                ('items', models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, related_name='desired_products', to='shop.productitems')),
            ],
            options={
                'verbose_name': 'Desired Products',
                'verbose_name_plural': 'Desired Products',
                'permissions': [],
            },
        ),
        migrations.AddField(
            model_name='basket',
            name='promocode',
            field=models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, related_name='basket', to='shop.promocode'),
        ),
    ]
